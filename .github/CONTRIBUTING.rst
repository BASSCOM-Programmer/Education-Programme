**********************************
Допринасяне за Професия Програмист
**********************************

Основната цел на този файл е да даде достатъчно насоки за всеки, който иска да допринесе с нещо за развитието на професия програмист.

Примери за "допринасяне" включват:

- Коментари, въпроси и предложения към програмата
- Коментари, въпроси и предложения към материалите
- Оправяне на всякакви правописни и стилистични грешки.

reST
####

Форматът навсякъде е restructured text (reST). Използваме reST, защото markdown ни дава твърде малко неща, а за подобен проект, трябва да имаме добър инструмент за изразяване в текст.

`Добър "tutorial" за reST може да намерите тук <http://thomas-cokelaer.info/tutorials/sphinx/rest_syntax.html>`_

За коментари и въпроси се използват Issues
#################################################

Ако искате да зададете въпрос или пък да направите коментар, начинът за това е да отворите ново Issue към проекта.

Ако преди не си използвал GitHub препоръчваме да погледнеш `този материал <https://guides.github.com/features/issues/>`_

Има няколко важни неща, които трябва да знаеш:

1. Преди да отвориш Issue, виж дали някой друг не е попитал подобен на твоя въпрос. Тогава е по-добра идея да продължиш с коментар във вече създаденото Issue. Така ще имаме малко дублирания.
2. Всяко Issue към този проект идва с предефиниран шаблон. Препоръчваме да спазваш структурата, особено при даване на обратна връзка за програмата. Така работата на всички ще бъде една идея по-лесна
3. Очакваме придържане към конструктивен тон и даване на конструктивни предложения. Ако отвориш Issue с чиста доза "hate", има огромен шанс да бъде маркирано и затворено директно.

За директни предложения се използват Pull Requests
##################################################

Ако искаш да дадеш идея за задача или пък да направиш корекция по текст или материал, можеш да го направиш директно чрез Pull Request.

Ако преди не си използвал GitHub, препоръчваме да погледнеш `този материал <https://help.github.com/articles/using-pull-requests/>`_. Разбира се, първо трябва да се направи `fork <https://help.github.com/articles/fork-a-repo/>`_

Има няколко важни неща, които трябва да знаеш:

1. Преди да изпратиш Pull Request е добра идея първо да отвориш Issue с предложението, което имаш. Дискусията там може да ти даде по-добра яснота за това, което искаш да направиш. Ако пък смяташ, че твоят Pull Request е достатъчно ясен, то тогава няма нужда от Issue
2. Както при Issues, всеки Pull Request има предефиниран шаблон. Това ще направи нашата работа доста по-лесна, когато преглеждаме предложенията.
